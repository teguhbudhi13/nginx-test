name: CI Docker Image Scan

on:
  push:
    branches: [main]
  pull_request:

jobs:
  image-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set commitid as image tag
        id: tag
        run: echo "TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t teguhbudhi13/nginx:${TAG} .

      # --- Trivy Scan (JSON Output) ---
      - name: Trivy Scan (JSON Output)
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: teguhbudhi13/nginx:${{ env.TAG }}
          format: json
          output: trivy-results.json
          ignore-unfixed: true
          vuln-type: 'os,library'

      - name: Show Critical/High from Trivy
        id: trivy-count
        run: |
          CRITICAL=$(jq '[.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | select(.Severity=="CRITICAL")] | length' trivy-results.json)
          HIGH=$(jq '[.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | select(.Severity=="HIGH")] | length' trivy-results.json)
          echo "CRITICAL found by Trivy: $CRITICAL"
          echo "HIGH found by Trivy: $HIGH"
          echo "TRIVY_CRITICAL=$CRITICAL" >> $GITHUB_ENV
          echo "TRIVY_HIGH=$HIGH" >> $GITHUB_ENV

      - name: Show Fix Details for Trivy CRITICAL/HIGH
        if: always()
        run: |
          echo "Vulnerabilities with available fixes (CRITICAL/HIGH):"
          jq -r '
            .Results[]
            | select(.Vulnerabilities != null)
            | .Vulnerabilities[]
            | select(.Severity=="CRITICAL" or .Severity=="HIGH")
            | select(.FixedVersion != null and .FixedVersion != "" and .FixedVersion != "-")
            | "\(.PkgName)\t\(.InstalledVersion)\t\(.VulnerabilityID)\t\(.Severity)\t\(.FixedVersion)"
          ' trivy-results.json | \
          awk 'BEGIN {print "PkgName\tCurrent\tCVE\tSeverity\tFixedVersion"} {print $0}'

      # --- Install Docker Scout (official) ---
      - name: Install Docker Scout
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
          sh install-scout.sh
          docker scout version

      - name: Docker Scout CVEs scan
        run: |
          docker scout cves teguhbudhi13/nginx:${TAG} > scout.log || true
          awk '
          /^ +[0-9]+C/ {
            split($0, parts, "  ");
            pkg = parts[length(parts)];
          }
          /^ +✗ (CRITICAL|HIGH)/ {
            sev = $2;
            cve = $3;
            block = "✗ " sev " " cve "\n";
            getline; block = block $0 "\n";
            getline; block = block $0 "\n";
            getline; block = block $0 "\n";
            print "Package: " pkg "\n" block;
          }
          ' scout.log

          CRITICAL=$(grep -c '✗ CRITICAL' scout.log || true)
          HIGH=$(grep -c '✗ HIGH' scout.log || true)
          echo "CRITICAL found by Docker Scout: $CRITICAL"
          echo "HIGH found by Docker Scout: $HIGH"
          echo "SCOUT_CRITICAL=$CRITICAL" >> $GITHUB_ENV
          echo "SCOUT_HIGH=$HIGH" >> $GITHUB_ENV

      - name: Docker Scout Recommendations
        run: docker scout recommendations teguhbudhi13/nginx:${TAG}

      # --- Fail pipeline if there are critical/high vulnerabilities (after all reporting) ---
      - name: Fail if critical/high in Trivy or Docker Scout
        if: env.TRIVY_CRITICAL != '0' || env.TRIVY_HIGH != '0' || env.SCOUT_CRITICAL != '0' || env.SCOUT_HIGH != '0'
        run: |
          echo "Failing pipeline due to critical/high CVEs found by Trivy or Docker Scout."
          exit 1

      # --- Push to DockerHub (if all checks passed) ---
      - name: Push image to DockerHub
        if: env.TRIVY_CRITICAL == '0' && env.TRIVY_HIGH == '0' && env.SCOUT_CRITICAL == '0' && env.SCOUT_HIGH == '0'
        run: docker push teguhbudhi13/nginx:${TAG}
